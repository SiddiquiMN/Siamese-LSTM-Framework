{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1GQBPhLf30es2XZ959JMvENWSQvgBvZbs","timestamp":1704823498398},{"file_id":"19pXkdjtf3nulP_10MHpkA-FDFTz5hcMm","timestamp":1704823125565},{"file_id":"13OvZFQRz8SyyFj9NfkECWDys252ZhToi","timestamp":1704818575320},{"file_id":"1JcZXBIvwGpaHFMtjH_FFZP7SKJGVtVsn","timestamp":1704741715297},{"file_id":"1MHt-6H7zz5UUMWyWICkUsdaHMXB_XXEj","timestamp":1699463992635}],"authorship_tag":"ABX9TyNN7xiArBhpSkGBo3U40pvz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**New Dataset er jnne joto gvi calculate kortesi tader, shob gula file oder corresponding preprocessed folder er organized Mask er mddhe ase including csv file. ar gvi diff er output gula code er mddhei ase.**\n"],"metadata":{"id":"FSgFsFEzXVfA"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"2aXtiT1Wg6T5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704823560923,"user_tz":-360,"elapsed":28603,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"51d3f0c6-b2a3-45de-d0ed-c4e0737d10e4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["GVI DIFFERENCE CALCULATED FOR PAIRS IN FOREST DATASET 1 (PROTHOM JEI DATASET BANANO HOISE)"],"metadata":{"id":"O8LctTdOuymB"}},{"cell_type":"markdown","source":["/content/drive/MyDrive/Sowmik Dataset/Planned_way/Forest all processed file/Organized Mask"],"metadata":{"id":"X8rCSE_KKjTg"}},{"cell_type":"code","source":["import os\n","import shutil\n","\n","def organize_images(folder_path, output_folder_path):\n","    # Create a new folder to store organized images\n","    if not os.path.exists(output_folder_path):\n","        os.makedirs(output_folder_path)\n","\n","    # List all files in the folder\n","    files = os.listdir(folder_path)\n","\n","    for filename in files:\n","        file_path = os.path.join(folder_path, filename)\n","\n","        # Check if it's a file and not a directory\n","        if os.path.isfile(file_path):\n","            # Extract the year from the filename\n","            #year = filename.split('-')[-1].split('.')[0]  # Extract the part after the last hyphen and before the file extension\n","\n","            year = filename.split('_')[-2].split('.')[0] # Extract the part after the last hyphen and before the file extension\n","            print(\"Year extracted:\", year)\n","\n","\n","            # Create a subfolder for the year if it doesn't exist\n","            year_folder_path = os.path.join(output_folder_path, year)\n","            if not os.path.exists(year_folder_path):\n","                os.makedirs(year_folder_path)\n","\n","            # Copy the image to the corresponding year folder\n","            dest_path = os.path.join(year_folder_path, filename)\n","            shutil.copy(file_path, dest_path)\n","\n","# Example usage\n","folder_path = '/content/drive/MyDrive/Sowmik Dataset/New dataset/Residence_all_processed_data/bmask_residence'\n","output_folder_path = '/content/drive/MyDrive/Sowmik Dataset/New dataset/Residence_all_processed_data/Organized Mask'\n","organize_images(folder_path, output_folder_path)\n","\n","\n"],"metadata":{"id":"ABmBVApfMHHy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704823635933,"user_tz":-360,"elapsed":11491,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"61c71daf-66b4-4165-cccb-97023e41e8da"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Year extracted: 2010\n","Year extracted: 2015\n","Year extracted: 2020\n","Year extracted: 2005\n","Year extracted: 2015\n","Year extracted: 2015\n","Year extracted: 2005\n","Year extracted: 2020\n","Year extracted: 2000\n","Year extracted: 2010\n","Year extracted: 2000\n","Year extracted: 2010\n","Year extracted: 2020\n","Year extracted: 2005\n","Year extracted: 2020\n","Year extracted: 2015\n","Year extracted: 2005\n","Year extracted: 2000\n","Year extracted: 2010\n","Year extracted: 2015\n","Year extracted: 2000\n","Year extracted: 2005\n","Year extracted: 2010\n","Year extracted: 2000\n","Year extracted: 2020\n","Year extracted: 2000\n","Year extracted: 2015\n","Year extracted: 2000\n","Year extracted: 2005\n","Year extracted: 2020\n","Year extracted: 2010\n","Year extracted: 2010\n","Year extracted: 2005\n","Year extracted: 2020\n","Year extracted: 2015\n"]}]},{"cell_type":"markdown","source":["-seperated mask images into years.\n","-run GVI in these images and store in csv file\n","-calculate difference between two years"],"metadata":{"id":"ct2CpjNC2NFz"}},{"cell_type":"code","source":["import numpy as np\n","\n","def calculate_gvi(binary_image):\n","    # Convert the binary image to a NumPy array\n","    binary_array = np.array(binary_image)\n","\n","    # Count the number of white pixels (vegetation) in the binary image\n","    white_pixels = (binary_array == 255).sum()\n","\n","    # Count the total number of pixels in the image\n","    total_pixels = binary_array.size\n","\n","    # Calculate the GVI value (percentage of vegetation)\n","    gvi_value = (white_pixels / total_pixels) * 100\n","\n","    return gvi_value\n","\n","\n","def calculate_gvi_difference(image_1, image_2):\n","    gvi_1 = calculate_gvi(image_1)\n","    gvi_2 = calculate_gvi(image_2)\n","    gvi_difference = gvi_2 - gvi_1\n","    return gvi_difference\n","\n"],"metadata":{"id":"0UeuoehRQjBz","executionInfo":{"status":"ok","timestamp":1704823644261,"user_tz":-360,"elapsed":683,"user":{"displayName":"thesis research","userId":"06634674941398765871"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["entire csv file with gvi value"],"metadata":{"id":"zDUvUVy_a0Z_"}},{"cell_type":"code","source":["import os\n","import csv\n","from PIL import Image\n","\n","root_folder = '/content/drive/MyDrive/Sowmik Dataset/New dataset/Residence_all_processed_data/Organized Mask'\n","output_csv = os.path.join(root_folder, 'gvi_output_all_years.csv')\n","\n","# Create the directory if it does not exist\n","if not os.path.exists(root_folder):\n","    os.makedirs(root_folder)\n","\n","def calculate_gvi(binary_image):\n","    # Count the number of white pixels (vegetation) in the binary image\n","    white_pixels = sum(1 for pixel in binary_image.getdata() if pixel == 255)\n","\n","    # Count the total number of pixels in the image\n","    total_pixels = binary_image.size[0] * binary_image.size[1]\n","\n","    # Calculate the GVI value (percentage of vegetation)\n","    gvi_value = (white_pixels / total_pixels) * 100\n","\n","    return gvi_value\n","\n","def calculate_and_store_gvi(root_folder, output_csv):\n","    # Create or open the CSV file for writing\n","    with open(output_csv, 'w', newline='') as csvfile:\n","        csv_writer = csv.writer(csvfile)\n","\n","        # Write the header to the CSV file\n","        csv_writer.writerow([\"Year\", \"Image\", \"GVI\"])\n","\n","        # Iterate through each year folder\n","        for year_folder in os.listdir(root_folder):\n","            year_path = os.path.join(root_folder, year_folder)\n","\n","            # Skip if it's not a directory\n","            if not os.path.isdir(year_path):\n","                continue\n","\n","            # Iterate through each item in the year folder\n","            for item in os.listdir(year_path):\n","                item_path = os.path.join(year_path, item)\n","\n","                # Skip if it's not a file\n","                if not os.path.isfile(item_path):\n","                    continue\n","\n","                # Load the image\n","                binary_image = Image.open(item_path)\n","\n","                # Calculate GVI for the image\n","                gvi_value = calculate_gvi(binary_image)\n","\n","                # Write the data to the CSV file\n","                csv_writer.writerow([year_folder, item, gvi_value])\n","\n","# Calculate and store GVI for all images in the dataset and save to CSV\n","calculate_and_store_gvi(root_folder, output_csv)\n","\n"],"metadata":{"id":"fpyA-U2vPJMA","executionInfo":{"status":"ok","timestamp":1704823649589,"user_tz":-360,"elapsed":1363,"user":{"displayName":"thesis research","userId":"06634674941398765871"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","\n","\n","# Load the dataset into a dataframe\n","df = pd.read_csv('/content/drive/MyDrive/Sowmik Dataset/New dataset/Forest_all_processed_data/Organized Mask/gvi_output_all_years.csv')\n","\n","# Display the first few rows of the dataframe to understand its structure\n","print(df)\n"],"metadata":{"id":"5R73CLmq0c_8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704823656553,"user_tz":-360,"elapsed":2137,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"d42e97f4-c0f2-4efc-b99c-c8aca22bffda"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["                     Year                     Image        GVI\n","0      pp_Odtuf_2005_mask    pp_Odtuf_2005_mask.jpg  13.284302\n","1      pp_Odtuf_2015_mask    pp_Odtuf_2015_mask.jpg   0.009155\n","2    pp_forestt_2015_mask  pp_forestt_2015_mask.jpg   2.656555\n","3    pp_forestt_2000_mask  pp_forestt_2000_mask.jpg   6.329346\n","4    pp_forestt_2020_mask  pp_forestt_2020_mask.jpg   0.028992\n","..                    ...                       ...        ...\n","195                  2010    pp_silva_2010_mask.jpg   0.012207\n","196                  2010     pp_bata_2010_mask.jpg   0.321960\n","197                  2010        pp_b_2010_mask.jpg   3.985596\n","198                  2010        pp_s_2010_mask.jpg   7.707214\n","199                  2010       pp_sa_2010_mask.jpg   9.176636\n","\n","[200 rows x 3 columns]\n"]}]},{"cell_type":"markdown","source":["seperate dataframes to store fvi of seperate years"],"metadata":{"id":"N7dv0PojcURB"}},{"cell_type":"code","source":["# Assuming your dataframe has a column named 'Year'\n","unique_years = df['Year'].unique()\n","\n","# Assuming your dataframe has a column named 'Year'\n","unique_years = df['Year'].unique()\n","\n","# Create separate dataframes for each year, sorted\n","df_2000 = df[df['Year'] == \"2000\"]\n","df_2000 =df_2000.sort_values(by='Image')\n","df_2005 = df[df['Year'] == \"2005\"]\n","df_2005 =df_2005.sort_values(by='Image')\n","df_2010 = df[df['Year'] == \"2010\"]\n","df_2010=df_2010.sort_values(by='Image')\n","df_2015 = df[df['Year'] == \"2015\"]\n","df_2015 =df_2015.sort_values(by='Image')\n","df_2020 = df[df['Year'] == \"2020\"]\n","df_2020 =df_2020.sort_values(by='Image')\n"],"metadata":{"id":"HSmIYUpXbNCY","executionInfo":{"status":"ok","timestamp":1704823661986,"user_tz":-360,"elapsed":526,"user":{"displayName":"thesis research","userId":"06634674941398765871"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["df_2020"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":676},"id":"n1uiV_uYbPv3","executionInfo":{"status":"ok","timestamp":1704823665690,"user_tz":-360,"elapsed":507,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"d7dd749a-34de-4b55-ac98-c6f5860560c0"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Year                       Image        GVI\n","161  2020      pp_Odtuf_2020_mask.jpg  22.918701\n","177  2020          pp_b_2020_mask.jpg   0.436401\n","176  2020       pp_bata_2020_mask.jpg   3.131104\n","167  2020       pp_braf_2020_mask.jpg   1.823425\n","174  2020      pp_casas_2020_mask.jpg   2.905273\n","169  2020        pp_dik_2020_mask.jpg   1.303101\n","168  2020     pp_dikato_2020_mask.jpg   1.000977\n","166  2020  pp_elvacenzy_2020_mask.jpg   7.662964\n","172  2020       pp_emma_2020_mask.jpg   4.183960\n","171  2020        pp_esa_2020_mask.jpg   4.975891\n","170  2020       pp_essa_2020_mask.jpg   0.509644\n","173  2020        pp_eta_2020_mask.jpg   0.613403\n","162  2020    pp_forestp_2020_mask.jpg   0.093079\n","160  2020    pp_forestt_2020_mask.jpg   0.028992\n","163  2020    pp_forestv_2020_mask.jpg   1.055908\n","178  2020          pp_s_2020_mask.jpg   5.984497\n","179  2020         pp_sa_2020_mask.jpg   0.910950\n","165  2020      pp_shell_2020_mask.jpg   0.364685\n","175  2020      pp_silva_2020_mask.jpg   0.044250\n","164  2020     pp_yakutf_2020_mask.jpg  48.098755"],"text/html":["\n","  <div id=\"df-adca9366-a2b8-44ac-9c44-649e4cc99448\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Image</th>\n","      <th>GVI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>161</th>\n","      <td>2020</td>\n","      <td>pp_Odtuf_2020_mask.jpg</td>\n","      <td>22.918701</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>2020</td>\n","      <td>pp_b_2020_mask.jpg</td>\n","      <td>0.436401</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>2020</td>\n","      <td>pp_bata_2020_mask.jpg</td>\n","      <td>3.131104</td>\n","    </tr>\n","    <tr>\n","      <th>167</th>\n","      <td>2020</td>\n","      <td>pp_braf_2020_mask.jpg</td>\n","      <td>1.823425</td>\n","    </tr>\n","    <tr>\n","      <th>174</th>\n","      <td>2020</td>\n","      <td>pp_casas_2020_mask.jpg</td>\n","      <td>2.905273</td>\n","    </tr>\n","    <tr>\n","      <th>169</th>\n","      <td>2020</td>\n","      <td>pp_dik_2020_mask.jpg</td>\n","      <td>1.303101</td>\n","    </tr>\n","    <tr>\n","      <th>168</th>\n","      <td>2020</td>\n","      <td>pp_dikato_2020_mask.jpg</td>\n","      <td>1.000977</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>2020</td>\n","      <td>pp_elvacenzy_2020_mask.jpg</td>\n","      <td>7.662964</td>\n","    </tr>\n","    <tr>\n","      <th>172</th>\n","      <td>2020</td>\n","      <td>pp_emma_2020_mask.jpg</td>\n","      <td>4.183960</td>\n","    </tr>\n","    <tr>\n","      <th>171</th>\n","      <td>2020</td>\n","      <td>pp_esa_2020_mask.jpg</td>\n","      <td>4.975891</td>\n","    </tr>\n","    <tr>\n","      <th>170</th>\n","      <td>2020</td>\n","      <td>pp_essa_2020_mask.jpg</td>\n","      <td>0.509644</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>2020</td>\n","      <td>pp_eta_2020_mask.jpg</td>\n","      <td>0.613403</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>2020</td>\n","      <td>pp_forestp_2020_mask.jpg</td>\n","      <td>0.093079</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>2020</td>\n","      <td>pp_forestt_2020_mask.jpg</td>\n","      <td>0.028992</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>2020</td>\n","      <td>pp_forestv_2020_mask.jpg</td>\n","      <td>1.055908</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>2020</td>\n","      <td>pp_s_2020_mask.jpg</td>\n","      <td>5.984497</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>2020</td>\n","      <td>pp_sa_2020_mask.jpg</td>\n","      <td>0.910950</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>2020</td>\n","      <td>pp_shell_2020_mask.jpg</td>\n","      <td>0.364685</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>2020</td>\n","      <td>pp_silva_2020_mask.jpg</td>\n","      <td>0.044250</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>2020</td>\n","      <td>pp_yakutf_2020_mask.jpg</td>\n","      <td>48.098755</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-adca9366-a2b8-44ac-9c44-649e4cc99448')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-adca9366-a2b8-44ac-9c44-649e4cc99448 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-adca9366-a2b8-44ac-9c44-649e4cc99448');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f3504d61-65aa-4341-ae73-b15ef59ab7f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3504d61-65aa-4341-ae73-b15ef59ab7f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f3504d61-65aa-4341-ae73-b15ef59ab7f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2aa9838e-2982-489a-802c-6676de1c6934\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_2020')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2aa9838e-2982-489a-802c-6676de1c6934 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_2020');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df_2005"],"metadata":{"id":"9HhwHIoncTZR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_2010"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":676},"id":"JRG6dy9wqgg2","executionInfo":{"status":"ok","timestamp":1704823675155,"user_tz":-360,"elapsed":391,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"d34711c6-4a4a-45c1-f11f-233d95e5d46b"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Year                       Image        GVI\n","180  2010      pp_Odtuf_2010_mask.jpg   0.248718\n","197  2010          pp_b_2010_mask.jpg   3.985596\n","196  2010       pp_bata_2010_mask.jpg   0.321960\n","186  2010       pp_braf_2010_mask.jpg   9.396362\n","194  2010      pp_casas_2010_mask.jpg   0.128174\n","189  2010        pp_dik_2010_mask.jpg   0.152588\n","188  2010     pp_dikato_2010_mask.jpg  15.580750\n","187  2010  pp_elvacenzy_2010_mask.jpg  15.519714\n","193  2010       pp_emma_2010_mask.jpg   3.665161\n","192  2010        pp_esa_2010_mask.jpg   1.626587\n","190  2010       pp_essa_2010_mask.jpg   0.117493\n","191  2010        pp_eta_2010_mask.jpg   0.370789\n","183  2010    pp_forestp_2010_mask.jpg   0.605774\n","181  2010    pp_forestt_2010_mask.jpg   0.274658\n","182  2010    pp_forestv_2010_mask.jpg   0.044250\n","198  2010          pp_s_2010_mask.jpg   7.707214\n","199  2010         pp_sa_2010_mask.jpg   9.176636\n","185  2010      pp_shell_2010_mask.jpg  51.229858\n","195  2010      pp_silva_2010_mask.jpg   0.012207\n","184  2010     pp_yakutf_2010_mask.jpg  57.545471"],"text/html":["\n","  <div id=\"df-acfaf372-a4ae-4da0-9b59-6827bfcb3ebe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Image</th>\n","      <th>GVI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>180</th>\n","      <td>2010</td>\n","      <td>pp_Odtuf_2010_mask.jpg</td>\n","      <td>0.248718</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>2010</td>\n","      <td>pp_b_2010_mask.jpg</td>\n","      <td>3.985596</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>2010</td>\n","      <td>pp_bata_2010_mask.jpg</td>\n","      <td>0.321960</td>\n","    </tr>\n","    <tr>\n","      <th>186</th>\n","      <td>2010</td>\n","      <td>pp_braf_2010_mask.jpg</td>\n","      <td>9.396362</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>2010</td>\n","      <td>pp_casas_2010_mask.jpg</td>\n","      <td>0.128174</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>2010</td>\n","      <td>pp_dik_2010_mask.jpg</td>\n","      <td>0.152588</td>\n","    </tr>\n","    <tr>\n","      <th>188</th>\n","      <td>2010</td>\n","      <td>pp_dikato_2010_mask.jpg</td>\n","      <td>15.580750</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>2010</td>\n","      <td>pp_elvacenzy_2010_mask.jpg</td>\n","      <td>15.519714</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>2010</td>\n","      <td>pp_emma_2010_mask.jpg</td>\n","      <td>3.665161</td>\n","    </tr>\n","    <tr>\n","      <th>192</th>\n","      <td>2010</td>\n","      <td>pp_esa_2010_mask.jpg</td>\n","      <td>1.626587</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>2010</td>\n","      <td>pp_essa_2010_mask.jpg</td>\n","      <td>0.117493</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>2010</td>\n","      <td>pp_eta_2010_mask.jpg</td>\n","      <td>0.370789</td>\n","    </tr>\n","    <tr>\n","      <th>183</th>\n","      <td>2010</td>\n","      <td>pp_forestp_2010_mask.jpg</td>\n","      <td>0.605774</td>\n","    </tr>\n","    <tr>\n","      <th>181</th>\n","      <td>2010</td>\n","      <td>pp_forestt_2010_mask.jpg</td>\n","      <td>0.274658</td>\n","    </tr>\n","    <tr>\n","      <th>182</th>\n","      <td>2010</td>\n","      <td>pp_forestv_2010_mask.jpg</td>\n","      <td>0.044250</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>2010</td>\n","      <td>pp_s_2010_mask.jpg</td>\n","      <td>7.707214</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>2010</td>\n","      <td>pp_sa_2010_mask.jpg</td>\n","      <td>9.176636</td>\n","    </tr>\n","    <tr>\n","      <th>185</th>\n","      <td>2010</td>\n","      <td>pp_shell_2010_mask.jpg</td>\n","      <td>51.229858</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>2010</td>\n","      <td>pp_silva_2010_mask.jpg</td>\n","      <td>0.012207</td>\n","    </tr>\n","    <tr>\n","      <th>184</th>\n","      <td>2010</td>\n","      <td>pp_yakutf_2010_mask.jpg</td>\n","      <td>57.545471</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-acfaf372-a4ae-4da0-9b59-6827bfcb3ebe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-acfaf372-a4ae-4da0-9b59-6827bfcb3ebe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-acfaf372-a4ae-4da0-9b59-6827bfcb3ebe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d67832f1-ded1-4490-b373-e37bb1275867\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d67832f1-ded1-4490-b373-e37bb1275867')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d67832f1-ded1-4490-b373-e37bb1275867 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_20d23cc5-4949-48de-b1a7-c6e962963720\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_2010')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_20d23cc5-4949-48de-b1a7-c6e962963720 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_2010');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Assuming your dataframe has a column named 'Year'\n","unique_years = df['Year'].unique()\n","\n","# Create a new DataFrame to store the GVI differences\n","df_gvi_diff = pd.DataFrame()\n","\n","# Calculate GVI differences for each corresponding row\n","df_gvi_diff['Image'] = df_2020['Image']\n","\n","df_gvi_diff['GVI_diff_2020-2000'] = df_2020['GVI'].values - df_2000['GVI'].values\n","df_gvi_diff['GVI_diff_2020-2005'] = df_2020['GVI'].values - df_2005['GVI'].values\n","df_gvi_diff['GVI_diff_2020-2010'] = df_2020['GVI'].values - df_2010['GVI'].values\n","df_gvi_diff['GVI_diff_2020-2015'] = df_2020['GVI'].values - df_2015['GVI'].values\n","\n","# Print the new DataFrame with the calculated GVI differences\n","print(df_gvi_diff)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-TCysif5s7-H","executionInfo":{"status":"ok","timestamp":1704823680084,"user_tz":-360,"elapsed":374,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"716aaa44-3861-4ca9-eed6-06a8df53fd84"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["                          Image  GVI_diff_2020-2000  GVI_diff_2020-2005  \\\n","161      pp_Odtuf_2020_mask.jpg           20.710754            9.634399   \n","177          pp_b_2020_mask.jpg            0.331116          -30.067444   \n","176       pp_bata_2020_mask.jpg            2.728271          -14.134216   \n","167       pp_braf_2020_mask.jpg            1.208496            0.633240   \n","174      pp_casas_2020_mask.jpg          -31.468201            1.904297   \n","169        pp_dik_2020_mask.jpg            0.297546            1.069641   \n","168     pp_dikato_2020_mask.jpg          -58.026123            0.892639   \n","166  pp_elvacenzy_2020_mask.jpg          -25.819397            7.466125   \n","172       pp_emma_2020_mask.jpg          -35.485840            3.286743   \n","171        pp_esa_2020_mask.jpg            4.975891          -12.617493   \n","170       pp_essa_2020_mask.jpg          -44.859314            0.263977   \n","173        pp_eta_2020_mask.jpg          -23.205566            0.611877   \n","162    pp_forestp_2020_mask.jpg          -10.293579           -4.170227   \n","160    pp_forestt_2020_mask.jpg           -6.300354           -0.086975   \n","163    pp_forestv_2020_mask.jpg           -4.125977          -32.817078   \n","178          pp_s_2020_mask.jpg            4.341125            4.402161   \n","179         pp_sa_2020_mask.jpg            0.910950           -5.030823   \n","165      pp_shell_2020_mask.jpg          -27.714539           -7.733154   \n","175      pp_silva_2020_mask.jpg           -1.229858            0.044250   \n","164     pp_yakutf_2020_mask.jpg           30.458069           46.591187   \n","\n","     GVI_diff_2020-2010  GVI_diff_2020-2015  \n","161           22.669983           22.909546  \n","177           -3.549194          -38.687134  \n","176            2.809143           -3.596497  \n","167           -7.572937            1.501465  \n","174            2.777100          -26.652527  \n","169            1.150513           -3.694153  \n","168          -14.579773            0.721741  \n","166           -7.856750            7.435608  \n","172            0.518799          -16.844177  \n","171            3.349304          -17.601013  \n","170            0.392151           -9.173584  \n","173            0.242615          -14.326477  \n","162           -0.512695           -0.106812  \n","160           -0.245667           -2.627563  \n","163            1.011658            0.917053  \n","178           -1.722717           -8.004761  \n","179           -8.265686           -5.297852  \n","165          -50.865173            0.364685  \n","175            0.032043           -0.108337  \n","164           -9.446716           39.764404  \n"]}]},{"cell_type":"code","source":["print(df_gvi_diff)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xIsgpmkhte5C","executionInfo":{"status":"ok","timestamp":1704823687072,"user_tz":-360,"elapsed":470,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"21531601-e8f5-4d25-9f40-eb2978b20b03"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["                          Image  GVI_diff_2020-2000  GVI_diff_2020-2005  \\\n","161      pp_Odtuf_2020_mask.jpg           20.710754            9.634399   \n","177          pp_b_2020_mask.jpg            0.331116          -30.067444   \n","176       pp_bata_2020_mask.jpg            2.728271          -14.134216   \n","167       pp_braf_2020_mask.jpg            1.208496            0.633240   \n","174      pp_casas_2020_mask.jpg          -31.468201            1.904297   \n","169        pp_dik_2020_mask.jpg            0.297546            1.069641   \n","168     pp_dikato_2020_mask.jpg          -58.026123            0.892639   \n","166  pp_elvacenzy_2020_mask.jpg          -25.819397            7.466125   \n","172       pp_emma_2020_mask.jpg          -35.485840            3.286743   \n","171        pp_esa_2020_mask.jpg            4.975891          -12.617493   \n","170       pp_essa_2020_mask.jpg          -44.859314            0.263977   \n","173        pp_eta_2020_mask.jpg          -23.205566            0.611877   \n","162    pp_forestp_2020_mask.jpg          -10.293579           -4.170227   \n","160    pp_forestt_2020_mask.jpg           -6.300354           -0.086975   \n","163    pp_forestv_2020_mask.jpg           -4.125977          -32.817078   \n","178          pp_s_2020_mask.jpg            4.341125            4.402161   \n","179         pp_sa_2020_mask.jpg            0.910950           -5.030823   \n","165      pp_shell_2020_mask.jpg          -27.714539           -7.733154   \n","175      pp_silva_2020_mask.jpg           -1.229858            0.044250   \n","164     pp_yakutf_2020_mask.jpg           30.458069           46.591187   \n","\n","     GVI_diff_2020-2010  GVI_diff_2020-2015  \n","161           22.669983           22.909546  \n","177           -3.549194          -38.687134  \n","176            2.809143           -3.596497  \n","167           -7.572937            1.501465  \n","174            2.777100          -26.652527  \n","169            1.150513           -3.694153  \n","168          -14.579773            0.721741  \n","166           -7.856750            7.435608  \n","172            0.518799          -16.844177  \n","171            3.349304          -17.601013  \n","170            0.392151           -9.173584  \n","173            0.242615          -14.326477  \n","162           -0.512695           -0.106812  \n","160           -0.245667           -2.627563  \n","163            1.011658            0.917053  \n","178           -1.722717           -8.004761  \n","179           -8.265686           -5.297852  \n","165          -50.865173            0.364685  \n","175            0.032043           -0.108337  \n","164           -9.446716           39.764404  \n"]}]}]}