{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1Z-W1r0XQ8L7_zD8P0H_D4QrQFLsJH83E","authorship_tag":"ABX9TyNa6jR6w7SV0ht50REprZoy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BwqEWq905A2r","executionInfo":{"status":"ok","timestamp":1706895380011,"user_tz":-360,"elapsed":28557,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"ef950428-f163-49e4-99b4-554813448bc8"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":11,"metadata":{"id":"KkujxKjv4y2G","executionInfo":{"status":"ok","timestamp":1706895769426,"user_tz":-360,"elapsed":5,"user":{"displayName":"thesis research","userId":"06634674941398765871"}}},"outputs":[],"source":["import numpy as np\n","import os\n","import pandas as pd\n","from keras.preprocessing.image import ImageDataGenerator\n","from tensorflow.keras.utils import to_categorical\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","data_train = pd.read_csv('/content/drive/MyDrive/Garbase New/fashion-mnist_train.csv')\n","X_full = data_train.iloc[:,1:]\n","y_full = data_train.iloc[:,:1]\n","x_train, x_test, y_train, y_test = train_test_split(X_full, y_full, test_size = 0.3)"],"metadata":{"id":"QEoMRL2V6pSe","executionInfo":{"status":"ok","timestamp":1706897209424,"user_tz":-360,"elapsed":6480,"user":{"displayName":"thesis research","userId":"06634674941398765871"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["x_train = x_train.values.reshape(-1, 28, 28, 1).astype('float32') / 255.\n","x_test = x_test.values.reshape(-1, 28, 28, 1).astype('float32') / 255.\n","y_train = y_train.values.astype('int')\n","y_test = y_test.values.astype('int')\n","print('Training', x_train.shape, x_train.max())\n","print('Testing', x_test.shape, x_test.max())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I4NpE2ja7ZzX","executionInfo":{"status":"ok","timestamp":1706897214422,"user_tz":-360,"elapsed":623,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"c8784897-524b-43fa-d6b2-4771c8906611"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Training (42000, 28, 28, 1) 1.0\n","Testing (18000, 28, 28, 1) 1.0\n"]}]},{"cell_type":"code","source":["# reorganize by groups\n","train_groups = [x_train[np.where(y_train==i)[0]] for i in np.unique(y_train)]\n","test_groups = [x_test[np.where(y_test==i)[0]] for i in np.unique(y_train)]\n","print('train groups:', [x.shape[0] for x in train_groups])\n","print('test groups:', [x.shape[0] for x in test_groups])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ahnvp-P87gfD","executionInfo":{"status":"ok","timestamp":1706897217564,"user_tz":-360,"elapsed":8,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"88c73173-f75c-44e5-a1aa-ce94fa325a4c"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["train groups: [4198, 4241, 4242, 4127, 4113, 4229, 4193, 4207, 4213, 4237]\n","test groups: [1802, 1759, 1758, 1873, 1887, 1771, 1807, 1793, 1787, 1763]\n"]}]},{"cell_type":"code","source":["def gen_random_batch(in_groups, batch_halfsize = 8):\n","    out_img_a, out_img_b, out_score = [], [], []\n","    all_groups = list(range(len(in_groups)))\n","    for match_group in [True, False]:\n","        group_idx = np.random.choice(all_groups, size = batch_halfsize)\n","        out_img_a += [in_groups[c_idx][np.random.choice(range(in_groups[c_idx].shape[0]))] for c_idx in group_idx]\n","        if match_group:\n","            b_group_idx = group_idx\n","            out_score += [1]*batch_halfsize\n","        else:\n","            # anything but the same group\n","            non_group_idx = [np.random.choice([i for i in all_groups if i!=c_idx]) for c_idx in group_idx]\n","            b_group_idx = non_group_idx\n","            out_score += [0]*batch_halfsize\n","\n","        out_img_b += [in_groups[c_idx][np.random.choice(range(in_groups[c_idx].shape[0]))] for c_idx in b_group_idx]\n","\n","    return np.stack(out_img_a,0), np.stack(out_img_b,0), np.stack(out_score,0)"],"metadata":{"id":"SEq7Ejdb7i6d","executionInfo":{"status":"ok","timestamp":1706897240113,"user_tz":-360,"elapsed":491,"user":{"displayName":"thesis research","userId":"06634674941398765871"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["pv_a, pv_b, pv_sim = gen_random_batch(train_groups, 3)\n","fig, m_axs = plt.subplots(2, pv_a.shape[0], figsize = (12, 6))\n","for c_a, c_b, c_d, (ax1, ax2) in zip(pv_a, pv_b, pv_sim, m_axs.T):\n","    ax1.imshow(c_a[:,:,0])\n","    ax1.set_title('Image A')\n","    ax1.axis('off')\n","    ax2.imshow(c_b[:,:,0])\n","    ax2.set_title('Image B\\n Similarity: %3.0f%%' % (100*c_d))\n","    ax2.axis('off')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"UiYfDxH_APcD","executionInfo":{"status":"ok","timestamp":1706897255804,"user_tz":-360,"elapsed":1663,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"faf1dc34-fac8-4fa3-ed12-68b3f6132d48"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 12 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from keras.models import Model\n","from keras.layers import Input, Conv2D, BatchNormalization, MaxPool2D, Activation, Flatten, Dense, Dropout\n","img_in = Input(shape = x_train.shape[1:], name = 'FeatureNet_ImageInput')\n","n_layer = img_in\n","for i in range(2):\n","    n_layer = Conv2D(8*2**i, kernel_size = (3,3), activation = 'linear')(n_layer)\n","    n_layer = BatchNormalization()(n_layer)\n","    n_layer = Activation('relu')(n_layer)\n","    n_layer = Conv2D(16*2**i, kernel_size = (3,3), activation = 'linear')(n_layer)\n","    n_layer = BatchNormalization()(n_layer)\n","    n_layer = Activation('relu')(n_layer)\n","    n_layer = MaxPool2D((2,2))(n_layer)\n","n_layer = Flatten()(n_layer)\n","n_layer = Dense(32, activation = 'linear')(n_layer)\n","n_layer = Dropout(0.5)(n_layer)\n","n_layer = BatchNormalization()(n_layer)\n","n_layer = Activation('relu')(n_layer)\n","feature_model = Model(inputs = [img_in], outputs = [n_layer], name = 'FeatureGenerationModel')\n","feature_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G6nwm2OAAUCy","executionInfo":{"status":"ok","timestamp":1706897279389,"user_tz":-360,"elapsed":1192,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"5c4f74f6-760b-4c3e-85b5-ebc393170cfd"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"FeatureGenerationModel\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," FeatureNet_ImageInput (Inp  [(None, 28, 28, 1)]       0         \n"," utLayer)                                                        \n","                                                                 \n"," conv2d (Conv2D)             (None, 26, 26, 8)         80        \n","                                                                 \n"," batch_normalization (Batch  (None, 26, 26, 8)         32        \n"," Normalization)                                                  \n","                                                                 \n"," activation (Activation)     (None, 26, 26, 8)         0         \n","                                                                 \n"," conv2d_1 (Conv2D)           (None, 24, 24, 16)        1168      \n","                                                                 \n"," batch_normalization_1 (Bat  (None, 24, 24, 16)        64        \n"," chNormalization)                                                \n","                                                                 \n"," activation_1 (Activation)   (None, 24, 24, 16)        0         \n","                                                                 \n"," max_pooling2d (MaxPooling2  (None, 12, 12, 16)        0         \n"," D)                                                              \n","                                                                 \n"," conv2d_2 (Conv2D)           (None, 10, 10, 16)        2320      \n","                                                                 \n"," batch_normalization_2 (Bat  (None, 10, 10, 16)        64        \n"," chNormalization)                                                \n","                                                                 \n"," activation_2 (Activation)   (None, 10, 10, 16)        0         \n","                                                                 \n"," conv2d_3 (Conv2D)           (None, 8, 8, 32)          4640      \n","                                                                 \n"," batch_normalization_3 (Bat  (None, 8, 8, 32)          128       \n"," chNormalization)                                                \n","                                                                 \n"," activation_3 (Activation)   (None, 8, 8, 32)          0         \n","                                                                 \n"," max_pooling2d_1 (MaxPoolin  (None, 4, 4, 32)          0         \n"," g2D)                                                            \n","                                                                 \n"," flatten (Flatten)           (None, 512)               0         \n","                                                                 \n"," dense (Dense)               (None, 32)                16416     \n","                                                                 \n"," dropout (Dropout)           (None, 32)                0         \n","                                                                 \n"," batch_normalization_4 (Bat  (None, 32)                128       \n"," chNormalization)                                                \n","                                                                 \n"," activation_4 (Activation)   (None, 32)                0         \n","                                                                 \n","=================================================================\n","Total params: 25040 (97.81 KB)\n","Trainable params: 24832 (97.00 KB)\n","Non-trainable params: 208 (832.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["from keras.layers import concatenate\n","img_a_in = Input(shape = x_train.shape[1:], name = 'ImageA_Input')\n","img_b_in = Input(shape = x_train.shape[1:], name = 'ImageB_Input')\n","img_a_feat = feature_model(img_a_in)\n","img_b_feat = feature_model(img_b_in)\n","combined_features = concatenate([img_a_feat, img_b_feat], name = 'merge_features')\n","combined_features = Dense(16, activation = 'linear')(combined_features)\n","combined_features = BatchNormalization()(combined_features)\n","combined_features = Activation('relu')(combined_features)\n","combined_features = Dense(4, activation = 'linear')(combined_features)\n","combined_features = BatchNormalization()(combined_features)\n","combined_features = Activation('relu')(combined_features)\n","combined_features = Dense(1, activation = 'sigmoid')(combined_features)\n","similarity_model = Model(inputs = [img_a_in, img_b_in], outputs = [combined_features], name = 'Similarity_Model')\n","similarity_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VBK4GxyqAZjp","executionInfo":{"status":"ok","timestamp":1706897297998,"user_tz":-360,"elapsed":740,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"86f04149-a00d-4031-fed3-c6f0f70c3e6d"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"Similarity_Model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                Output Shape                 Param #   Connected to                  \n","==================================================================================================\n"," ImageA_Input (InputLayer)   [(None, 28, 28, 1)]          0         []                            \n","                                                                                                  \n"," ImageB_Input (InputLayer)   [(None, 28, 28, 1)]          0         []                            \n","                                                                                                  \n"," FeatureGenerationModel (Fu  (None, 32)                   25040     ['ImageA_Input[0][0]',        \n"," nctional)                                                           'ImageB_Input[0][0]']        \n","                                                                                                  \n"," merge_features (Concatenat  (None, 64)                   0         ['FeatureGenerationModel[0][0]\n"," e)                                                                 ',                            \n","                                                                     'FeatureGenerationModel[1][0]\n","                                                                    ']                            \n","                                                                                                  \n"," dense_1 (Dense)             (None, 16)                   1040      ['merge_features[0][0]']      \n","                                                                                                  \n"," batch_normalization_5 (Bat  (None, 16)                   64        ['dense_1[0][0]']             \n"," chNormalization)                                                                                 \n","                                                                                                  \n"," activation_5 (Activation)   (None, 16)                   0         ['batch_normalization_5[0][0]'\n","                                                                    ]                             \n","                                                                                                  \n"," dense_2 (Dense)             (None, 4)                    68        ['activation_5[0][0]']        \n","                                                                                                  \n"," batch_normalization_6 (Bat  (None, 4)                    16        ['dense_2[0][0]']             \n"," chNormalization)                                                                                 \n","                                                                                                  \n"," activation_6 (Activation)   (None, 4)                    0         ['batch_normalization_6[0][0]'\n","                                                                    ]                             \n","                                                                                                  \n"," dense_3 (Dense)             (None, 1)                    5         ['activation_6[0][0]']        \n","                                                                                                  \n","==================================================================================================\n","Total params: 26233 (102.47 KB)\n","Trainable params: 25985 (101.50 KB)\n","Non-trainable params: 248 (992.00 Byte)\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","source":["# setup the optimization process\n","similarity_model.compile(optimizer='adam', loss = 'binary_crossentropy', metrics = ['mae'])"],"metadata":{"id":"mnwaAfY6AdcC","executionInfo":{"status":"ok","timestamp":1706897415830,"user_tz":-360,"elapsed":720,"user":{"displayName":"thesis research","userId":"06634674941398765871"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["def show_model_output(nb_examples = 3):\n","    pv_a, pv_b, pv_sim = gen_random_batch(test_groups, nb_examples)\n","    pred_sim = similarity_model.predict([pv_a, pv_b])\n","    fig, m_axs = plt.subplots(2, pv_a.shape[0], figsize = (12, 6))\n","    for c_a, c_b, c_d, p_d, (ax1, ax2) in zip(pv_a, pv_b, pv_sim, pred_sim, m_axs.T):\n","        ax1.imshow(c_a[:,:,0])\n","        ax1.set_title('Image A\\n Actual: %3.0f%%' % (100*c_d))\n","        ax1.axis('off')\n","        ax2.imshow(c_b[:,:,0])\n","        ax2.set_title('Image B\\n Predicted: %3.0f%%' % (100*p_d))\n","        ax2.axis('off')\n","    return fig\n","# a completely untrained model\n","_ = show_model_output()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"o2cAoOrtAf1x","executionInfo":{"status":"ok","timestamp":1706897420378,"user_tz":-360,"elapsed":2235,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"e3cf0bac-1491-4b2f-e1d1-c2d020cba75f"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 1s 612ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 12 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# make a generator out of the data\n","def siam_gen(in_groups, batch_size = 32):\n","    while True:\n","        pv_a, pv_b, pv_sim = gen_random_batch(train_groups, batch_size//2)\n","        yield [pv_a, pv_b], pv_sim\n","# we want a constant validation group to have a frame of reference for model performance\n","valid_a, valid_b, valid_sim = gen_random_batch(test_groups, 1024)\n","loss_history = similarity_model.fit_generator(siam_gen(train_groups),\n","                               steps_per_epoch = 500,\n","                               validation_data=([valid_a, valid_b], valid_sim),\n","                                              epochs = 10,\n","                                             verbose = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0JKJq-WvAhnX","executionInfo":{"status":"ok","timestamp":1706897962053,"user_tz":-360,"elapsed":534668,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"6c8f9f8b-47bb-4ac5-b5c8-bc973ff4c1f3"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-28-ade925f9341a>:8: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  loss_history = similarity_model.fit_generator(siam_gen(train_groups),\n"]},{"output_type":"stream","name":"stdout","text":["500/500 [==============================] - 55s 101ms/step - loss: 0.6448 - mae: 0.4592 - val_loss: 0.5166 - val_mae: 0.3781\n","Epoch 2/10\n","500/500 [==============================] - 54s 108ms/step - loss: 0.5021 - mae: 0.3586 - val_loss: 0.4430 - val_mae: 0.2830\n","Epoch 3/10\n","500/500 [==============================] - 54s 108ms/step - loss: 0.4542 - mae: 0.3090 - val_loss: 0.3904 - val_mae: 0.2508\n","Epoch 4/10\n","500/500 [==============================] - 53s 107ms/step - loss: 0.4290 - mae: 0.2860 - val_loss: 0.3549 - val_mae: 0.2248\n","Epoch 5/10\n","500/500 [==============================] - 51s 102ms/step - loss: 0.4200 - mae: 0.2749 - val_loss: 0.3526 - val_mae: 0.2187\n","Epoch 6/10\n","500/500 [==============================] - 53s 106ms/step - loss: 0.4077 - mae: 0.2666 - val_loss: 0.3486 - val_mae: 0.2092\n","Epoch 7/10\n","500/500 [==============================] - 54s 107ms/step - loss: 0.3896 - mae: 0.2534 - val_loss: 0.3364 - val_mae: 0.2036\n","Epoch 8/10\n","500/500 [==============================] - 53s 107ms/step - loss: 0.3862 - mae: 0.2501 - val_loss: 0.3300 - val_mae: 0.1941\n","Epoch 9/10\n","500/500 [==============================] - 52s 105ms/step - loss: 0.3814 - mae: 0.2475 - val_loss: 0.3247 - val_mae: 0.1900\n","Epoch 10/10\n","500/500 [==============================] - 53s 106ms/step - loss: 0.3680 - mae: 0.2360 - val_loss: 0.3204 - val_mae: 0.1906\n"]}]},{"cell_type":"code","source":["_ = show_model_output()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"R4qn1_e7AjfI","executionInfo":{"status":"ok","timestamp":1706898039219,"user_tz":-360,"elapsed":1969,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"3ec65187-d090-435e-e112-11fab5ae7afe"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 41ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 12 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["t_shirt_vec = np.stack([train_groups[0][0]]*x_test.shape[0],0)\n","t_shirt_score = similarity_model.predict([t_shirt_vec, x_test], verbose = True, batch_size = 128)\n","ankle_boot_vec = np.stack([train_groups[-1][0]]*x_test.shape[0],0)\n","ankle_boot_score = similarity_model.predict([ankle_boot_vec, x_test], verbose = True, batch_size = 128)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"taTPWbvQAldf","executionInfo":{"status":"ok","timestamp":1706899313951,"user_tz":-360,"elapsed":31428,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"3325cb39-5d00-424c-8534-57a3d2ad0ea1"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["141/141 [==============================] - 11s 76ms/step\n","141/141 [==============================] - 7s 52ms/step\n"]}]},{"cell_type":"code","source":["#Ei cell ta error dey.\n","\n","obj_categories = ['T-shirt/top','Trouser','Pullover','Dress',\n","                  'Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot'\n","                 ]\n","colors = plt.cm.rainbow(np.linspace(0, 1, 10))\n","plt.figure(figsize=(10, 10))\n","\n","for c_group, (c_color, c_label) in enumerate(zip(colors, obj_categories)):\n","    plt.scatter(t_shirt_score[np.where(y_test == c_group), 0],\n","                ankle_boot_score[np.where(y_test == c_group), 0],\n","                marker='.',\n","                color=c_color,\n","                linewidth='1',\n","                alpha=0.8,\n","                label=c_label)\n","plt.xlabel('T-Shirt Dimension')\n","plt.ylabel('Ankle-Boot Dimension')\n","plt.title('T-Shirt and Ankle-Boot Dimension')\n","plt.legend(loc='best')\n","plt.savefig('tshirt-boot-dist.png')\n","plt.show(block=False)"],"metadata":{"id":"f23sOMphAnxP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"NQB5q-MYK7yI"}},{"cell_type":"code","source":["x_test_features = feature_model.predict(x_test, verbose = True, batch_size=128)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aIbAGHDZAp7o","executionInfo":{"status":"ok","timestamp":1706899350420,"user_tz":-360,"elapsed":5417,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"4d5bca44-8fe6-461f-ae1f-bd6bb4ddb979"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["141/141 [==============================] - 5s 33ms/step\n"]}]},{"cell_type":"code","source":["%%time\n","from sklearn.manifold import TSNE\n","tsne_obj = TSNE(n_components=2,\n","                         init='pca',\n","                         random_state=101,\n","                         method='barnes_hut',\n","                         n_iter=500,\n","                         verbose=2)\n","tsne_features = tsne_obj.fit_transform(x_test_features)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SmmsMQhqAr1o","executionInfo":{"status":"ok","timestamp":1706899450726,"user_tz":-360,"elapsed":97447,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"c8cecd22-f0bb-4a14-998e-76a4df6686f4"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["[t-SNE] Computing 91 nearest neighbors...\n","[t-SNE] Indexed 18000 samples in 0.001s...\n","[t-SNE] Computed neighbors for 18000 samples in 2.429s...\n","[t-SNE] Computed conditional probabilities for sample 1000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 2000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 3000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 4000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 5000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 6000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 7000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 8000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 9000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 10000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 11000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 12000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 13000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 14000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 15000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 16000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 17000 / 18000\n","[t-SNE] Computed conditional probabilities for sample 18000 / 18000\n","[t-SNE] Mean sigma: 0.096843\n","[t-SNE] Computed conditional probabilities in 0.627s\n","[t-SNE] Iteration 50: error = 90.3337402, gradient norm = 0.0176255 (50 iterations in 11.641s)\n","[t-SNE] Iteration 100: error = 82.2313690, gradient norm = 0.0060068 (50 iterations in 9.600s)\n","[t-SNE] Iteration 150: error = 80.1191406, gradient norm = 0.0036012 (50 iterations in 8.131s)\n","[t-SNE] Iteration 200: error = 79.1441803, gradient norm = 0.0025351 (50 iterations in 9.877s)\n","[t-SNE] Iteration 250: error = 78.5929794, gradient norm = 0.0018742 (50 iterations in 9.669s)\n","[t-SNE] KL divergence after 250 iterations with early exaggeration: 78.592979\n","[t-SNE] Iteration 300: error = 3.0090423, gradient norm = 0.0092236 (50 iterations in 7.935s)\n","[t-SNE] Iteration 350: error = 2.4481192, gradient norm = 0.0087852 (50 iterations in 9.564s)\n","[t-SNE] Iteration 400: error = 2.1645346, gradient norm = 0.0080711 (50 iterations in 9.491s)\n","[t-SNE] Iteration 450: error = 1.9928691, gradient norm = 0.0075149 (50 iterations in 7.791s)\n","[t-SNE] Iteration 500: error = 1.8774980, gradient norm = 0.0070144 (50 iterations in 9.765s)\n","[t-SNE] KL divergence after 500 iterations: 1.877498\n","CPU times: user 2min 43s, sys: 452 ms, total: 2min 43s\n","Wall time: 1min 36s\n"]}]},{"cell_type":"code","source":["# R Ei cell ta error dey.\n","\n","obj_categories = ['T-shirt/top','Trouser','Pullover','Dress',\n","                  'Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot'\n","                 ]\n","colors = plt.cm.rainbow(np.linspace(0, 1, 10))\n","plt.figure(figsize=(10, 10))\n","\n","for c_group, (c_color, c_label) in enumerate(zip(colors, obj_categories)):\n","    plt.scatter(tsne_features[np.where(y_test == c_group), 0],\n","                tsne_features[np.where(y_test == c_group), 1],\n","                marker='o',\n","                color=c_color,\n","                linewidth='1',\n","                alpha=0.8,\n","                label=c_label)\n","plt.xlabel('Dimension 1')\n","plt.ylabel('Dimension 2')\n","plt.title('t-SNE on Testing Samples')\n","plt.legend(loc='best')\n","plt.savefig('clothes-dist.png')\n","plt.show(block=False)"],"metadata":{"id":"-yX_gT5qAtyY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["feature_model.save('fashion_feature_model.h5')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QtBxi4qXAv_X","executionInfo":{"status":"ok","timestamp":1706899604280,"user_tz":-360,"elapsed":3,"user":{"displayName":"thesis research","userId":"06634674941398765871"}},"outputId":"ae17ef80-f4d3-49ce-cdf8-35f6e53022c6"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n"]}]},{"cell_type":"code","source":["similarity_model.save('fashion_similarity_model.h5')"],"metadata":{"id":"3U000KhpAx1f","executionInfo":{"status":"ok","timestamp":1706899607867,"user_tz":-360,"elapsed":510,"user":{"displayName":"thesis research","userId":"06634674941398765871"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"yrVvEal9AzZ2"},"execution_count":null,"outputs":[]}]}